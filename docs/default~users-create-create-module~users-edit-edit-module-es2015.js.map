{"version":3,"sources":["./src/app/components/user-form/user-form.component.html","./src/app/users/create/create.page.html","./src/app/components/user-form/user-form.component.scss","./src/app/components/user-form/user-form.component.ts","./src/app/users/create/create-routing.module.ts","./src/app/users/create/create.module.ts","./src/app/users/create/create.page.scss","./src/app/users/create/create.page.ts"],"names":[],"mappings":"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","file":"default~users-create-create-module~users-edit-edit-module-es2015.js","sourcesContent":["export default \"<!-- Se usuário não existe -->\\r\\n<ion-list *ngIf=\\\"noUser\\\">\\r\\n    <ion-item color=\\\"danger\\\">\\r\\n        <ion-label class=\\\"ion-text-center\\\">Usuário não foi encontrado!</ion-label>\\r\\n    </ion-item>\\r\\n    <ion-button expand=\\\"block\\\" class=\\\"ion-margin\\\" (click)=\\\"listUsers()\\\">Listar usuários</ion-button>\\r\\n</ion-list>\\r\\n\\r\\n<!-- Se usuário existe ou está criando um novo -->\\r\\n<div *ngIf=\\\"!noUser\\\">\\r\\n\\r\\n    <p class=\\\"ion-margin\\\" *ngIf=\\\"!userForm.controls.id.value\\\">\\r\\n        Preencha os campos abaixo com atenção para cadastrar um novo usuário.\\r\\n    </p>\\r\\n\\r\\n    <p class=\\\"ion-margin\\\" *ngIf=\\\"userForm.controls.id.value\\\">\\r\\n        Preencha os campos abaixo com atenção para editar o usuário.\\r\\n    </p>\\r\\n\\r\\n    <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <input type=\\\"hidden\\\" id=\\\"id\\\" name=\\\"id\\\" formControlName=\\\"id\\\">\\r\\n\\r\\n        <ion-list lines=\\\"full\\\" class=\\\"ion-margin\\\">\\r\\n\\r\\n            <!-- Campo 'name' -->\\r\\n            <ion-item>\\r\\n                <ion-label for=\\\"name\\\" position=\\\"floating\\\" color=\\\"primary\\\">Nome:\\r\\n\\r\\n                    <!-- Se está em estado de erro -->\\r\\n                    <ion-text color=\\\"danger\\\" *ngIf=\\\"userForm.controls.name.errors\\\">\\r\\n\\r\\n                        <!-- Se ainda não preencheu... -->\\r\\n                        <small *ngIf=\\\"userForm.controls.name.errors.required\\\">* Obrigatório</small>\\r\\n\\r\\n                        <!-- Se não tem comprimento suficiente... -->\\r\\n                        <small *ngIf=\\\"userForm.controls.name.errors.minlength\\\">* Inválido</small>\\r\\n                    </ion-text>\\r\\n\\r\\n                </ion-label>\\r\\n                <ion-input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\"></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Campo 'email' -->\\r\\n            <ion-item>\\r\\n                <ion-label for=\\\"email\\\" position=\\\"floating\\\" color=\\\"primary\\\">E-mail:\\r\\n                    <ion-text color=\\\"danger\\\" *ngIf=\\\"userForm.controls.email.errors\\\">\\r\\n                        <small *ngIf=\\\"userForm.controls.email.errors.required\\\">* Obrigatório</small>\\r\\n                        <small *ngIf=\\\"userForm.controls.email.errors.pattern\\\">* Inválido</small>\\r\\n                    </ion-text>\\r\\n                </ion-label>\\r\\n                <ion-input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Campo 'avatar' -->\\r\\n            <ion-item>\\r\\n                <ion-label for=\\\"avatar\\\" position=\\\"floating\\\" color=\\\"primary\\\">URL do avatar:\\r\\n                    <ion-text color=\\\"danger\\\" *ngIf=\\\"userForm.controls.avatar.errors\\\">\\r\\n                        <small *ngIf=\\\"userForm.controls.avatar.errors.required\\\">* Obrigatório</small>\\r\\n                        <small *ngIf=\\\"userForm.controls.avatar.errors.pattern\\\">* Inválido</small>\\r\\n                    </ion-text>\\r\\n                </ion-label>\\r\\n                <ion-input type=\\\"url\\\" id=\\\"avatar\\\" name=\\\"avatar\\\" formControlName=\\\"avatar\\\"></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Campo 'status' -->\\r\\n            <ion-item>\\r\\n                <ion-label for=\\\"status\\\" color=\\\"primary\\\">Status:</ion-label>\\r\\n                <ion-toggle id=\\\"status\\\" name=\\\"status\\\" slot=\\\"end\\\" formControlName=\\\"status\\\"></ion-toggle>\\r\\n            </ion-item>\\r\\n\\r\\n        </ion-list>\\r\\n\\r\\n        <ion-button type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"ion-margin\\\" [disabled]=\\\"!userForm.valid\\\">\\r\\n            <span *ngIf=\\\"userForm.controls.id.value\\\">Salvar usuário</span>\\r\\n            <span *ngIf=\\\"!userForm.controls.id.value\\\">Cadastrar usuário</span>\\r\\n        </ion-button>\\r\\n\\r\\n    </form>\\r\\n\\r\\n</div>\"","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <!-- Botão do menu -->\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-menu-button></ion-menu-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Criar usuário</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n    <!-- Seletor fo formulário de ususários -->\\r\\n    <app-userform></app-userform>\\r\\n\\r\\n</ion-content>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci1mb3JtL3VzZXItZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n// Importa bibliotecas do formulário\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n// Importa o service da API\r\nimport { UsersService } from 'src/app/services/users.service';\r\n\r\n// Importa roteamento\r\nimport { NavController } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { calcPossibleSecurityContexts } from '@angular/compiler/src/template_parser/binding_parser';\r\n\r\n@Component({\r\n  selector: 'app-userform',\r\n  templateUrl: './user-form.component.html',\r\n  styleUrls: ['./user-form.component.scss'],\r\n})\r\nexport class UserformComponent implements OnInit {\r\n\r\n  // Variável que contém o Id do usuário editado\r\n  id = this.route.snapshot.paramMap.get('id');\r\n\r\n  // Variável que verifica se não tem usuário a exibir\r\n  noUser = false;\r\n\r\n  // Criando formulário\r\n  public userForm: FormGroup;\r\n\r\n  constructor(\r\n    // Construtor do ReactiveForms\r\n    private formBuilder: FormBuilder,\r\n\r\n    // Inicializa service da API\r\n    private usersService: UsersService,\r\n\r\n    // Roteamento\r\n    public navCtrl: NavController,\r\n\r\n    // Configura route\r\n    private route: ActivatedRoute\r\n  ) {\r\n\r\n    // Definindo campos do formulário\r\n    this.userForm = this.formBuilder.group(\r\n      {\r\n        // Campo 'id'\r\n        id: [null],\r\n\r\n        // Campo 'name'\r\n        name: [                     // Nome do campo\r\n          null,          // Valor inicial 'null'\r\n          Validators.compose([      // Regras de validação\r\n            Validators.required,    // Campo obrigatório\r\n            Validators.minLength(3) // Cumprimento mínimo\r\n          ])\r\n        ],\r\n\r\n        // Campo 'email'\r\n        email: [\r\n          null,\r\n          Validators.compose([\r\n            Validators.required,\r\n            // Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$')\r\n            // Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n            Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-.]+$')\r\n          ])\r\n        ],\r\n\r\n        // Campo 'avatar'\r\n        avatar: [\r\n          null,\r\n          Validators.compose([\r\n            Validators.required,\r\n            // tslint:disable-next-line: max-line-length\r\n            // Validators.pattern(/^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i)\r\n            // tslint:disable-next-line: max-line-length\r\n            Validators.pattern(/^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i)\r\n          ])\r\n        ],\r\n\r\n        // Campo 'status'\r\n        status: [1]\r\n\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    // Se temos um Id na rota...\r\n    if (this.id) {\r\n\r\n      // Consulta a API para o Id informado\r\n      this.usersService.getUser(this.id).subscribe(\r\n\r\n        // Obtém dados\r\n        (res: any) => {\r\n\r\n          // Se usuário não existe\r\n          if (res.result === 'No record found') {\r\n\r\n            // Feedback na página HTML\r\n            this.noUser = true;\r\n\r\n            // Sai sem fazer nada\r\n            return false;\r\n\r\n            // Se usuário existe\r\n          } else {\r\n\r\n            // Preenche o formulário com os dados do usuário\r\n            this.userForm.controls.id.setValue(res.result.id);\r\n            this.userForm.controls.name.setValue(res.result.name);\r\n            this.userForm.controls.email.setValue(res.result.email);\r\n            this.userForm.controls.avatar.setValue(res.result.avatar);\r\n\r\n            // Converte status para number\r\n            this.userForm.controls.status.setValue(parseInt(res.result.status, 10));\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // Método de submit do formulário\r\n  onSubmit() {\r\n\r\n    // console.log(this.userForm.value);\r\n\r\n    // Se o campo id está vazio, estamos cadastrando um novo usuário\r\n    if (this.userForm.value.id === null) {\r\n\r\n      // Cadastra usuário //\r\n\r\n      // Remove o campo id\r\n      delete this.userForm.value.id;\r\n\r\n      // Ajusta o valor do campo 'status' para numérico\r\n      if (!this.userForm.value.status) {\r\n        this.userForm.value.status = 0;\r\n      } else {\r\n        this.userForm.value.status = 1;\r\n      }\r\n\r\n      // Salvar dados na API\r\n      this.usersService.postUser(this.userForm.value).subscribe(\r\n\r\n        (res: any) => {\r\n\r\n          // Se foi adicionado\r\n          if (res.status === 'success') {\r\n\r\n            // Feedback\r\n            // tslint:disable-next-line: max-line-length\r\n            if (confirm(`\"${this.userForm.value.name}\" foi adicionado com sucesso!\\n\\n    • Clique em [Ok] para listar usuários.\\n    • Clique em [Cancel] para cadastrar outro usuário.`)) {\r\n\r\n              // Retorna para a listagem\r\n              this.navCtrl.navigateForward('usuarios/todos');\r\n            } else {\r\n\r\n              // Limpa o formulário para cadastrar outro ususário\r\n              this.userForm.reset();\r\n            }\r\n          }\r\n        }\r\n      );\r\n\r\n      // Se tem um Id, atualiza usuário\r\n    } else {\r\n\r\n      // Atualizando dados do usuário da API\r\n      this.usersService.updateUser(this.userForm.value).subscribe(\r\n\r\n        // Dados enviados\r\n        (res: any) => {\r\n\r\n          // Se atualizou...\r\n          if (res.status === 'success') {\r\n\r\n            // Feedback\r\n            alert(`\"${this.userForm.value.name}\" atualizado com sucesso!\\nClique em [Ok] para continuar...`);\r\n\r\n            // Retornar para a listagem\r\n            this.navCtrl.navigateForward(`usuarios/usuario/${this.userForm.value.id}${this.makeId()}`);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // Ação do botão \"Listar ususários\"\r\n  listUsers() {\r\n    this.navCtrl.navigateForward('usuarios/todos');\r\n  }\r\n\r\n  // Gerador de string aleatória para forçar \"refresh\" da página\r\n  makeId() {\r\n    let text = '';\r\n    const characters = 'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz';\r\n    for (let i = 0; i < 7; i++) {\r\n      text += characters.charAt(Math.floor(Math.random() * characters.length));\r\n    }\r\n    return text;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CreatePage } from './create.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CreatePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CreatePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { CreatePageRoutingModule } from './create-routing.module';\r\nimport { CreatePage } from './create.page';\r\n\r\n// Importa formulário do usuário\r\nimport { UserformComponent } from '../../components/user-form/user-form.component';\r\n\r\n// Importa ReactiveForms\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    CreatePageRoutingModule,\r\n\r\n    // Inicializa ReactiveForms\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    CreatePage,\r\n\r\n    // Declara componente do formulário do usuário\r\n    UserformComponent\r\n  ],\r\n  exports: [\r\n\r\n    // Exporta componente do formulário do usuário para uso em outras páginas\r\n    UserformComponent\r\n  ]\r\n})\r\nexport class CreatePageModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2NyZWF0ZS9jcmVhdGUucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.page.html',\r\n  styleUrls: ['./create.page.scss'],\r\n})\r\nexport class CreatePage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}
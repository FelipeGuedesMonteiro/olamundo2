{"version":3,"sources":["src/app/components/user-form/user-form.component.html","src/app/users/create/create.page.html","src/app/components/user-form/user-form.component.scss","src/app/components/user-form/user-form.component.ts","src/app/users/create/create-routing.module.ts","src/app/users/create/create.module.ts","src/app/users/create/create.page.scss","src/app/users/create/create.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- Se usuário não existe -->\\r\\n<ion-list *ngIf=\\\"noUser\\\">\\r\\n    <ion-item color=\\\"danger\\\">\\r\\n        <ion-label class=\\\"ion-text-center\\\">Usuário não foi encontrado!</ion-label>\\r\\n    </ion-item>\\r\\n    <ion-button expand=\\\"block\\\" class=\\\"ion-margin\\\" (click)=\\\"listUsers()\\\">Listar usuários</ion-button>\\r\\n</ion-list>\\r\\n\\r\\n<!-- Se usuário existe ou está criando um novo -->\\r\\n<div *ngIf=\\\"!noUser\\\">\\r\\n\\r\\n    <p class=\\\"ion-margin\\\" *ngIf=\\\"!userForm.controls.id.value\\\">\\r\\n        Preencha os campos abaixo com atenção para cadastrar um novo usuário.\\r\\n    </p>\\r\\n\\r\\n    <p class=\\\"ion-margin\\\" *ngIf=\\\"userForm.controls.id.value\\\">\\r\\n        Preencha os campos abaixo com atenção para editar o usuário.\\r\\n    </p>\\r\\n\\r\\n    <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <input type=\\\"hidden\\\" id=\\\"id\\\" name=\\\"id\\\" formControlName=\\\"id\\\">\\r\\n\\r\\n        <ion-list lines=\\\"full\\\" class=\\\"ion-margin\\\">\\r\\n\\r\\n            <!-- Campo 'name' -->\\r\\n            <ion-item>\\r\\n                <ion-label for=\\\"name\\\" position=\\\"floating\\\" color=\\\"primary\\\">Nome:\\r\\n\\r\\n                    <!-- Se está em estado de erro -->\\r\\n                    <ion-text color=\\\"danger\\\" *ngIf=\\\"userForm.controls.name.errors\\\">\\r\\n\\r\\n                        <!-- Se ainda não preencheu... -->\\r\\n                        <small *ngIf=\\\"userForm.controls.name.errors.required\\\">* Obrigatório</small>\\r\\n\\r\\n                        <!-- Se não tem comprimento suficiente... -->\\r\\n                        <small *ngIf=\\\"userForm.controls.name.errors.minlength\\\">* Inválido</small>\\r\\n                    </ion-text>\\r\\n\\r\\n                </ion-label>\\r\\n                <ion-input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\"></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Campo 'email' -->\\r\\n            <ion-item>\\r\\n                <ion-label for=\\\"email\\\" position=\\\"floating\\\" color=\\\"primary\\\">E-mail:\\r\\n                    <ion-text color=\\\"danger\\\" *ngIf=\\\"userForm.controls.email.errors\\\">\\r\\n                        <small *ngIf=\\\"userForm.controls.email.errors.required\\\">* Obrigatório</small>\\r\\n                        <small *ngIf=\\\"userForm.controls.email.errors.pattern\\\">* Inválido</small>\\r\\n                    </ion-text>\\r\\n                </ion-label>\\r\\n                <ion-input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Campo 'avatar' -->\\r\\n            <ion-item>\\r\\n                <ion-label for=\\\"avatar\\\" position=\\\"floating\\\" color=\\\"primary\\\">URL do avatar:\\r\\n                    <ion-text color=\\\"danger\\\" *ngIf=\\\"userForm.controls.avatar.errors\\\">\\r\\n                        <small *ngIf=\\\"userForm.controls.avatar.errors.required\\\">* Obrigatório</small>\\r\\n                        <small *ngIf=\\\"userForm.controls.avatar.errors.pattern\\\">* Inválido</small>\\r\\n                    </ion-text>\\r\\n                </ion-label>\\r\\n                <ion-input type=\\\"url\\\" id=\\\"avatar\\\" name=\\\"avatar\\\" formControlName=\\\"avatar\\\"></ion-input>\\r\\n            </ion-item>\\r\\n\\r\\n            <!-- Campo 'status' -->\\r\\n            <ion-item>\\r\\n                <ion-label for=\\\"status\\\" color=\\\"primary\\\">Status:</ion-label>\\r\\n                <ion-toggle id=\\\"status\\\" name=\\\"status\\\" slot=\\\"end\\\" formControlName=\\\"status\\\"></ion-toggle>\\r\\n            </ion-item>\\r\\n\\r\\n        </ion-list>\\r\\n\\r\\n        <ion-button type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"ion-margin\\\" [disabled]=\\\"!userForm.valid\\\">\\r\\n            <span *ngIf=\\\"userForm.controls.id.value\\\">Salvar usuário</span>\\r\\n            <span *ngIf=\\\"!userForm.controls.id.value\\\">Cadastrar usuário</span>\\r\\n        </ion-button>\\r\\n\\r\\n    </form>\\r\\n\\r\\n</div>\"","export default \"<ion-header>\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <!-- Botão do menu -->\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-menu-button></ion-menu-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n        <ion-title>Criar usuário</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n    <!-- Seletor fo formulário de ususários -->\\r\\n    <app-userform></app-userform>\\r\\n\\r\\n</ion-content>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci1mb3JtL3VzZXItZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n// Importa bibliotecas do formulário\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n// Importa o service da API\r\nimport { UsersService } from 'src/app/services/users.service';\r\n\r\n// Importa roteamento\r\nimport { NavController } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { calcPossibleSecurityContexts } from '@angular/compiler/src/template_parser/binding_parser';\r\n\r\n@Component({\r\n  selector: 'app-userform',\r\n  templateUrl: './user-form.component.html',\r\n  styleUrls: ['./user-form.component.scss'],\r\n})\r\nexport class UserformComponent implements OnInit {\r\n\r\n  // Variável que contém o Id do usuário editado\r\n  id = this.route.snapshot.paramMap.get('id');\r\n\r\n  // Variável que verifica se não tem usuário a exibir\r\n  noUser = false;\r\n\r\n  // Criando formulário\r\n  public userForm: FormGroup;\r\n\r\n  constructor(\r\n    // Construtor do ReactiveForms\r\n    private formBuilder: FormBuilder,\r\n\r\n    // Inicializa service da API\r\n    private usersService: UsersService,\r\n\r\n    // Roteamento\r\n    public navCtrl: NavController,\r\n\r\n    // Configura route\r\n    private route: ActivatedRoute\r\n  ) {\r\n\r\n    // Definindo campos do formulário\r\n    this.userForm = this.formBuilder.group(\r\n      {\r\n        // Campo 'id'\r\n        id: [null],\r\n\r\n        // Campo 'name'\r\n        name: [                     // Nome do campo\r\n          null,          // Valor inicial 'null'\r\n          Validators.compose([      // Regras de validação\r\n            Validators.required,    // Campo obrigatório\r\n            Validators.minLength(3) // Cumprimento mínimo\r\n          ])\r\n        ],\r\n\r\n        // Campo 'email'\r\n        email: [\r\n          null,\r\n          Validators.compose([\r\n            Validators.required,\r\n            // Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$')\r\n            // Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n            Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-.]+$')\r\n          ])\r\n        ],\r\n\r\n        // Campo 'avatar'\r\n        avatar: [\r\n          null,\r\n          Validators.compose([\r\n            Validators.required,\r\n            // tslint:disable-next-line: max-line-length\r\n            // Validators.pattern(/^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i)\r\n            // tslint:disable-next-line: max-line-length\r\n            Validators.pattern(/^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i)\r\n          ])\r\n        ],\r\n\r\n        // Campo 'status'\r\n        status: [1]\r\n\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    // Se temos um Id na rota...\r\n    if (this.id) {\r\n\r\n      // Consulta a API para o Id informado\r\n      this.usersService.getUser(this.id).subscribe(\r\n\r\n        // Obtém dados\r\n        (res: any) => {\r\n\r\n          // Se usuário não existe\r\n          if (res.result === 'No record found') {\r\n\r\n            // Feedback na página HTML\r\n            this.noUser = true;\r\n\r\n            // Sai sem fazer nada\r\n            return false;\r\n\r\n            // Se usuário existe\r\n          } else {\r\n\r\n            // Preenche o formulário com os dados do usuário\r\n            this.userForm.controls.id.setValue(res.result.id);\r\n            this.userForm.controls.name.setValue(res.result.name);\r\n            this.userForm.controls.email.setValue(res.result.email);\r\n            this.userForm.controls.avatar.setValue(res.result.avatar);\r\n\r\n            // Converte status para number\r\n            this.userForm.controls.status.setValue(parseInt(res.result.status, 10));\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // Método de submit do formulário\r\n  onSubmit() {\r\n\r\n    // console.log(this.userForm.value);\r\n\r\n    // Se o campo id está vazio, estamos cadastrando um novo usuário\r\n    if (this.userForm.value.id === null) {\r\n\r\n      // Cadastra usuário //\r\n\r\n      // Remove o campo id\r\n      delete this.userForm.value.id;\r\n\r\n      // Ajusta o valor do campo 'status' para numérico\r\n      if (!this.userForm.value.status) {\r\n        this.userForm.value.status = 0;\r\n      } else {\r\n        this.userForm.value.status = 1;\r\n      }\r\n\r\n      // Salvar dados na API\r\n      this.usersService.postUser(this.userForm.value).subscribe(\r\n\r\n        (res: any) => {\r\n\r\n          // Se foi adicionado\r\n          if (res.status === 'success') {\r\n\r\n            // Feedback\r\n            // tslint:disable-next-line: max-line-length\r\n            if (confirm(`\"${this.userForm.value.name}\" foi adicionado com sucesso!\\n\\n    • Clique em [Ok] para listar usuários.\\n    • Clique em [Cancel] para cadastrar outro usuário.`)) {\r\n\r\n              // Retorna para a listagem\r\n              this.navCtrl.navigateForward('usuarios/todos');\r\n            } else {\r\n\r\n              // Limpa o formulário para cadastrar outro ususário\r\n              this.userForm.reset();\r\n            }\r\n          }\r\n        }\r\n      );\r\n\r\n      // Se tem um Id, atualiza usuário\r\n    } else {\r\n\r\n      // Atualizando dados do usuário da API\r\n      this.usersService.updateUser(this.userForm.value).subscribe(\r\n\r\n        // Dados enviados\r\n        (res: any) => {\r\n\r\n          // Se atualizou...\r\n          if (res.status === 'success') {\r\n\r\n            // Feedback\r\n            alert(`\"${this.userForm.value.name}\" atualizado com sucesso!\\nClique em [Ok] para continuar...`);\r\n\r\n            // Retornar para a listagem\r\n            this.navCtrl.navigateForward(`usuarios/usuario/${this.userForm.value.id}${this.makeId()}`);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // Ação do botão \"Listar ususários\"\r\n  listUsers() {\r\n    this.navCtrl.navigateForward('usuarios/todos');\r\n  }\r\n\r\n  // Gerador de string aleatória para forçar \"refresh\" da página\r\n  makeId() {\r\n    let text = '';\r\n    const characters = 'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz';\r\n    for (let i = 0; i < 7; i++) {\r\n      text += characters.charAt(Math.floor(Math.random() * characters.length));\r\n    }\r\n    return text;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CreatePage } from './create.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CreatePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CreatePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { CreatePageRoutingModule } from './create-routing.module';\r\nimport { CreatePage } from './create.page';\r\n\r\n// Importa formulário do usuário\r\nimport { UserformComponent } from '../../components/user-form/user-form.component';\r\n\r\n// Importa ReactiveForms\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    CreatePageRoutingModule,\r\n\r\n    // Inicializa ReactiveForms\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    CreatePage,\r\n\r\n    // Declara componente do formulário do usuário\r\n    UserformComponent\r\n  ],\r\n  exports: [\r\n\r\n    // Exporta componente do formulário do usuário para uso em outras páginas\r\n    UserformComponent\r\n  ]\r\n})\r\nexport class CreatePageModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2NyZWF0ZS9jcmVhdGUucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.page.html',\r\n  styleUrls: ['./create.page.scss'],\r\n})\r\nexport class CreatePage implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"default~users-create-create-module~users-edit-edit-module-es5.js"}
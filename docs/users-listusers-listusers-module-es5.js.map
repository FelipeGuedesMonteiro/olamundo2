{"version":3,"sources":["src/app/users/listusers/listusers.page.html","src/app/users/listusers/listusers-routing.module.ts","src/app/users/listusers/listusers.module.ts","src/app/users/listusers/listusers.page.scss","src/app/users/listusers/listusers.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <!-- Botão do menu -->\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n\\n        <ion-title>Lista de Usuários</ion-title>\\n        <ion-icon name=\\\"add-circle\\\" slot=\\\"end\\\" class=\\\"ion-margin-end\\\" (click)=\\\"createUsers()\\\"></ion-icon>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <!-- Mostre enquando carrega usuários -->\\n    <div class=\\\"ion-text-center ion-margin ion-padding\\\" *ngIf=\\\"!data\\\">\\n        <ion-spinner name=\\\"lines\\\"></ion-spinner>\\n    </div>\\n\\n    <!-- Se existem dados para mostrar -->\\n    <ion-list *ngIf=\\\"data\\\" class=\\\"ion-margin-bottom\\\">\\n\\n        <!-- Loop dos dados -->\\n        <div *ngFor=\\\"let user of itemsPage\\\">\\n\\n            <ion-item routerDirection=\\\"root\\\" [routerLink]=\\\"['/usuarios/usuario/', user.id]\\\">\\n                <ion-avatar slot=\\\"start\\\">\\n                    <img src=\\\"{{user.avatar}}\\\" alt=\\\"{{user.name}}\\\">\\n                </ion-avatar>\\n                <ion-label>\\n                    <h2>{{user.name}}</h2>\\n                    <h3>{{user.email}}</h3>\\n                </ion-label>\\n            </ion-item>\\n\\n        </div>\\n\\n    </ion-list>\\n\\n    <!-- Infinite Scrool -->\\n    <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n        <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Carregando mais dados...\\\">\\n        </ion-infinite-scroll-content>\\n    </ion-infinite-scroll>\\n\\n    &nbsp;\\n\\n    <!-- Se não existem usuários -->\\n    <ion-list *ngIf=\\\"noUsers\\\">\\n        <ion-item color=\\\"danger\\\">\\n            <ion-label class=\\\"ion-text-center\\\">Nenhum usuário foi encontrado!</ion-label>\\n        </ion-item>\\n    </ion-list>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListusersPage } from './listusers.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListusersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListusersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListusersPageRoutingModule } from './listusers-routing.module';\n\nimport { ListusersPage } from './listusers.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListusersPageRoutingModule\n  ],\n  declarations: [ListusersPage]\n})\nexport class ListusersPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2xpc3R1c2Vycy9saXN0dXNlcnMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n// Serviço de acesso à API\r\nimport { UsersService } from '../../services/users.service';\r\nimport { NavController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-listusers',\r\n  templateUrl: './listusers.page.html',\r\n  styleUrls: ['./listusers.page.scss'],\r\n})\r\n\r\nexport class ListusersPage implements OnInit {\r\n\r\n  // \"Infinite Scrool\") Variáveis\r\n  itemsPage: any = [];\r\n  private readonly offset: number = 10;\r\n  private index = 0;\r\n\r\n  // Variável que indentifica se temos usuários\r\n  noUsers = false;\r\n\r\n  // Variável com a array de usuários obtidos\r\n  data: Array<any> = [];\r\n\r\n  constructor(\r\n\r\n    // Instância do service de acesso à API\r\n    private usersService: UsersService,\r\n\r\n    public navCtrl: NavController\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // Obtendo os dados da API usando o service getUsers\r\n    this.usersService.getUsers().subscribe((res: any) => {\r\n\r\n      // Se falhou ao obter os dados\r\n      if (res.status !== 'success') {\r\n        console.log(`Falha: ${res.result}`);\r\n        return false;\r\n      }\r\n\r\n      // Loop para descartar usuários removidos (result = null) da listagem\r\n      res.result.forEach((value: any) => {\r\n        if (value !== null) {\r\n          this.data.push(value);\r\n        }\r\n      });\r\n\r\n      // Se não existem usuários\r\n      if (this.data.length === 0) {\r\n        this.noUsers = true;\r\n\r\n        // Se existem usuários\r\n      } else {\r\n\r\n        // \"Infinite Scrool\") Página atual da listagem\r\n        this.itemsPage = this.data.slice(this.index, this.offset + this.index);\r\n\r\n        // \"Infinite Scrool\") Próxima página\r\n        this.index += this.offset;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Infinite Scrool\r\n  loadData(event) {\r\n\r\n    setTimeout(() => {\r\n\r\n      // Paginação a cada rolagem\r\n      const news = this.data.slice(this.index, this.offset + this.index);\r\n      this.index += this.offset;\r\n\r\n      // Ao rolar, adiciona próximos ítens aos itens existentes\r\n      // tslint:disable-next-line: prefer-for-of\r\n      for (let i = 0; i < news.length; i++) {\r\n        this.itemsPage.push(news[i]);\r\n      }\r\n\r\n      // Concluir o tratamento do evento \"rolagem\"\r\n      event.target.complete();\r\n\r\n      // Encerra a rolagem se atingiu o total de elementos\r\n      if (this.itemsPage.length === this.data.length) {\r\n        event.target.disabled = true;\r\n      }\r\n\r\n      // Atraso em milissegundos para exibir o spinner e rolagem mais suave\r\n    }, 800);\r\n  }\r\n\r\n  createUsers() {\r\n    this.navCtrl.navigateForward('usuarios/criar');\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"users-listusers-listusers-module-es5.js"}
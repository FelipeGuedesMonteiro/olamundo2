{"version":3,"sources":["./src/app/users/listusers/listusers.page.html","./src/app/users/listusers/listusers-routing.module.ts","./src/app/users/listusers/listusers.module.ts","./src/app/users/listusers/listusers.page.scss","./src/app/users/listusers/listusers.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,w/BAAy7B,aAAa,WAAW,WAAW,2FAA2F,WAAW,iCAAiC,YAAY,gZAAgZ,qQ;;;;;;;;;;;;;;;;;;;ACAr+C;AACc;AAEN;AAEjD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;AAMF,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;CAAG;AAA7B,0BAA0B;IAJtC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBE;AACM;AACF;AAEA;AAE2B;AAEvB;AAWjD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAAG;AAAtB,mBAAmB;IAT/B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,oFAA0B;SAC3B;QACD,YAAY,EAAE,CAAC,6DAAa,CAAC;KAC9B,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;ACnBhC;AAAe,6GAA8C,uJ;;;;;;;;;;;;;;;;;;;ACAX;AAElD,0BAA0B;AACkC;AACb;AAQ/C,IAAa,aAAa,GAA1B,MAAa,aAAa;IAaxB;IAEE,uCAAuC;IAC/B,YAA0B,EAE3B,OAAsB;QAFrB,iBAAY,GAAZ,YAAY,CAAc;QAE3B,YAAO,GAAP,OAAO,CAAe;QAhB/B,+BAA+B;QAC/B,cAAS,GAAQ,EAAE,CAAC;QACH,WAAM,GAAW,EAAE,CAAC;QAC7B,UAAK,GAAG,CAAC,CAAC;QAElB,6CAA6C;QAC7C,YAAO,GAAG,KAAK,CAAC;QAEhB,2CAA2C;QAC3C,SAAI,GAAe,EAAE,CAAC;IAQlB,CAAC;IAEL,QAAQ;QAEN,oDAAoD;QACpD,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YAElD,8BAA8B;YAC9B,IAAI,GAAG,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC5B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;gBACpC,OAAO,KAAK,CAAC;aACd;YAED,qEAAqE;YACrE,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,EAAE;gBAChC,IAAI,KAAK,KAAK,IAAI,EAAE;oBAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;YAEH,0BAA0B;YAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBAEpB,sBAAsB;aACvB;iBAAM;gBAEL,8CAA8C;gBAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;gBAEvE,oCAAoC;gBACpC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB;IAClB,QAAQ,CAAC,KAAK;QAEZ,UAAU,CAAC,GAAG,EAAE;YAEd,2BAA2B;YAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YACnE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC;YAE1B,yDAAyD;YACzD,0CAA0C;YAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9B;YAED,4CAA4C;YAC5C,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YAExB,oDAAoD;YACpD,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAC9C,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;aAC9B;YAED,qEAAqE;QACvE,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;IACjD,CAAC;CACF;;YArEyB,oEAAY;YAElB,4DAAa;;AAlBpB,aAAa;IANzB,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,2NAAoC;;KAErC,CAAC;2EAkBwB,oEAAY;QAElB,4DAAa;GAlBpB,aAAa,CAqFzB;AArFyB","file":"users-listusers-listusers-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n\\n        <!-- Botão do menu -->\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n\\n        <ion-title>Lista de Usuários</ion-title>\\n        <ion-icon name=\\\"add-circle\\\" slot=\\\"end\\\" class=\\\"ion-margin-end\\\" (click)=\\\"createUsers()\\\"></ion-icon>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <!-- Mostre enquando carrega usuários -->\\n    <div class=\\\"ion-text-center ion-margin ion-padding\\\" *ngIf=\\\"!data\\\">\\n        <ion-spinner name=\\\"lines\\\"></ion-spinner>\\n    </div>\\n\\n    <!-- Se existem dados para mostrar -->\\n    <ion-list *ngIf=\\\"data\\\" class=\\\"ion-margin-bottom\\\">\\n\\n        <!-- Loop dos dados -->\\n        <div *ngFor=\\\"let user of itemsPage\\\">\\n\\n            <ion-item routerDirection=\\\"root\\\" [routerLink]=\\\"['/usuarios/usuario/', user.id]\\\">\\n                <ion-avatar slot=\\\"start\\\">\\n                    <img src=\\\"{{user.avatar}}\\\" alt=\\\"{{user.name}}\\\">\\n                </ion-avatar>\\n                <ion-label>\\n                    <h2>{{user.name}}</h2>\\n                    <h3>{{user.email}}</h3>\\n                </ion-label>\\n            </ion-item>\\n\\n        </div>\\n\\n    </ion-list>\\n\\n    <!-- Infinite Scrool -->\\n    <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n        <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Carregando mais dados...\\\">\\n        </ion-infinite-scroll-content>\\n    </ion-infinite-scroll>\\n\\n    &nbsp;\\n\\n    <!-- Se não existem usuários -->\\n    <ion-list *ngIf=\\\"noUsers\\\">\\n        <ion-item color=\\\"danger\\\">\\n            <ion-label class=\\\"ion-text-center\\\">Nenhum usuário foi encontrado!</ion-label>\\n        </ion-item>\\n    </ion-list>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListusersPage } from './listusers.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListusersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListusersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListusersPageRoutingModule } from './listusers-routing.module';\n\nimport { ListusersPage } from './listusers.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListusersPageRoutingModule\n  ],\n  declarations: [ListusersPage]\n})\nexport class ListusersPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL2xpc3R1c2Vycy9saXN0dXNlcnMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n// Serviço de acesso à API\r\nimport { UsersService } from '../../services/users.service';\r\nimport { NavController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-listusers',\r\n  templateUrl: './listusers.page.html',\r\n  styleUrls: ['./listusers.page.scss'],\r\n})\r\n\r\nexport class ListusersPage implements OnInit {\r\n\r\n  // \"Infinite Scrool\") Variáveis\r\n  itemsPage: any = [];\r\n  private readonly offset: number = 10;\r\n  private index = 0;\r\n\r\n  // Variável que indentifica se temos usuários\r\n  noUsers = false;\r\n\r\n  // Variável com a array de usuários obtidos\r\n  data: Array<any> = [];\r\n\r\n  constructor(\r\n\r\n    // Instância do service de acesso à API\r\n    private usersService: UsersService,\r\n\r\n    public navCtrl: NavController\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // Obtendo os dados da API usando o service getUsers\r\n    this.usersService.getUsers().subscribe((res: any) => {\r\n\r\n      // Se falhou ao obter os dados\r\n      if (res.status !== 'success') {\r\n        console.log(`Falha: ${res.result}`);\r\n        return false;\r\n      }\r\n\r\n      // Loop para descartar usuários removidos (result = null) da listagem\r\n      res.result.forEach((value: any) => {\r\n        if (value !== null) {\r\n          this.data.push(value);\r\n        }\r\n      });\r\n\r\n      // Se não existem usuários\r\n      if (this.data.length === 0) {\r\n        this.noUsers = true;\r\n\r\n        // Se existem usuários\r\n      } else {\r\n\r\n        // \"Infinite Scrool\") Página atual da listagem\r\n        this.itemsPage = this.data.slice(this.index, this.offset + this.index);\r\n\r\n        // \"Infinite Scrool\") Próxima página\r\n        this.index += this.offset;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Infinite Scrool\r\n  loadData(event) {\r\n\r\n    setTimeout(() => {\r\n\r\n      // Paginação a cada rolagem\r\n      const news = this.data.slice(this.index, this.offset + this.index);\r\n      this.index += this.offset;\r\n\r\n      // Ao rolar, adiciona próximos ítens aos itens existentes\r\n      // tslint:disable-next-line: prefer-for-of\r\n      for (let i = 0; i < news.length; i++) {\r\n        this.itemsPage.push(news[i]);\r\n      }\r\n\r\n      // Concluir o tratamento do evento \"rolagem\"\r\n      event.target.complete();\r\n\r\n      // Encerra a rolagem se atingiu o total de elementos\r\n      if (this.itemsPage.length === this.data.length) {\r\n        event.target.disabled = true;\r\n      }\r\n\r\n      // Atraso em milissegundos para exibir o spinner e rolagem mais suave\r\n    }, 800);\r\n  }\r\n\r\n  createUsers() {\r\n    this.navCtrl.navigateForward('usuarios/criar');\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}
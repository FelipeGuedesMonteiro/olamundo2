{"version":3,"sources":["src/app/gallery/gallery.page.html","src/app/gallery/gallery-routing.module.ts","src/app/gallery/gallery.module.ts","src/app/gallery/gallery.page.scss","src/app/gallery/gallery.page.ts","src/app/services/photo.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>Galeria de Fotos</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <ion-grid>\\n        <ion-row>\\n            <ion-col size=\\\"6\\\" *ngFor=\\\"let photo of photoService.photos; index as position\\\">\\n                <ion-img src=\\\"{{ photo.base64 ? photo.base64 : photo.webviewPath }}\\\" (click)=\\\"showActionSheet(photo, position)\\\"></ion-img>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n\\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"center\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button>\\n            <ion-icon name=\\\"camera\\\" (click)=\\\"photoService.addNewToGallery()\\\"></ion-icon>\\n        </ion-fab-button>\\n    </ion-fab>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GalleryPage } from './gallery.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GalleryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GalleryPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GalleryPageRoutingModule } from './gallery-routing.module';\n\nimport { GalleryPage } from './gallery.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GalleryPageRoutingModule\n  ],\n  declarations: [GalleryPage]\n})\nexport class GalleryPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dhbGxlcnkvZ2FsbGVyeS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\nimport { PhotoService } from '../services/photo.service';\n\nimport { ActionSheetController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.page.html',\n  styleUrls: ['./gallery.page.scss'],\n})\nexport class GalleryPage implements OnInit {\n\n  constructor(\n    public photoService: PhotoService,\n    public actionSheetController: ActionSheetController\n  ) { }\n\n  ngOnInit() {\n\n    this.photoService.loadSaved();\n  }\n\n  public async showActionSheet(photo, position) {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Photos',\n      buttons: [{\n        text: 'Apagar',\n        role: 'destructive',\n        icon: 'trash',\n        handler: () => {\n          this.photoService.deletePicture(photo, position);\n        }\n      }, {\n        text: 'Cancelar',\n        icon: 'close',\n        role: 'cancel',\n        handler: () => {\n          // Nothing to do, action sheet is automatically closed\n          }\n      }]\n    });\n    await actionSheet.present();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Plugins, CameraResultType, Capacitor, FilesystemDirectory, CameraPhoto, CameraSource } from '@capacitor/core';\n\nimport { Platform } from '@ionic/angular';\n\nconst { Camera, Filesystem, Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n\n  public photos: Photo[] = [];\n\n  private PHOTO_STORAGE = 'photos';\n\n  private platform: Platform;\n\n  constructor(platform: Platform) {\n    this.platform = platform;\n  }\n\n  // MÃ©todo para obter a foto\n  public async addNewToGallery() {\n    // Tirar foto\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n\n    // Salva foto no dispositivo\n    const savedImageFile: any = await this.savePicture(capturedPhoto);\n\n    // Exibe a foto\n    this.photos.unshift(savedImageFile);\n\n    Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: this.platform.is('hybrid')\n        ? JSON.stringify(this.photos)\n        : JSON.stringify(this.photos.map(p => {\n          // NÃ£o salve a representaÃ§Ã£o base64 dos dados da foto,\n          // jÃ¡ que ele jÃ¡ foi salvo no sistema de arquivos\n          const photoCopy = { ...p };\n          delete photoCopy.base64;\n\n          return photoCopy;\n        }))\n    });\n  }\n\n  // MÃ©todo para salvar a foto\n  private async savePicture(cameraPhoto: CameraPhoto) {\n    // Converta foto no formato base64, exigido pela API do sistema de arquivos para salvar\n    const base64Data = await this.readAsBase64(cameraPhoto);\n\n    // Escreva o arquivo no diretÃ³rio de dados\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFile = await Filesystem.writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: FilesystemDirectory.Data\n    });\n\n    if (this.platform.is('hybrid')) {\n      // Exiba a nova imagem reescrevendo o caminho 'file: //' para HTTP\n      // Detalhes: https://ionicframework.com/docs/building/webview#file-protocol\n      return {\n        filepath: savedFile.uri,\n        webviewPath: Capacitor.convertFileSrc(savedFile.uri),\n      };\n    } else {\n      // Use webPath para exibir a nova imagem em vez de base64, pois jÃ¡ estÃ¡ carregado na memÃ³ria\n      return {\n        filepath: fileName,\n        webviewPath: cameraPhoto.webPath\n      };\n    }\n  }\n\n  // Busque a foto, leia como um binÃ¡rio e converta para o formato base64\n  private async readAsBase64(cameraPhoto: CameraPhoto) {\n\n    // \"hybrid\" irÃ¡ detectar Cordova ou Capacitor\n    if (this.platform.is('hybrid')) {\n      // Leia o arquivo no formato base64\n      const file = await Filesystem.readFile({\n        path: cameraPhoto.path\n      });\n      return file.data;\n    } else {\n      // Busque a foto, leia como um binÃ¡rio e converta para o formato base64\n      const response = await fetch(cameraPhoto.webPath);\n      const blob = await response.blob();\n      return await this.convertBlobToBase64(blob) as string;\n    }\n  }\n\n  // ObtÃ©m a foto gravada no diretÃ³rio\n  convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = reject;\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  })\n\n  // Recuperar dados da matriz de fotos em cache\n  public async loadSaved() {\n    // Recuperar dados da matriz de fotos em cache\n    const photos = await Storage.get({ key: this.PHOTO_STORAGE });\n    this.photos = JSON.parse(photos.value) || [];\n\n    // Maneira mais fÃ¡cil de detectar ao executar na web:\n    // \"quando a plataforma NÃO for hÃ­brida, faÃ§a isso\"\n    if (!this.platform.is('hybrid')) {\n      // Exiba a foto lendo no formato base64\n      // tslint:disable-next-line: prefer-const\n      for (let photo of this.photos) {\n        // Leia os dados de cada foto salva no sistema de arquivos\n        const readFile = await Filesystem.readFile({\n          path: photo.filepath,\n          directory: FilesystemDirectory.Data\n        });\n\n        // Apenas plataforma da Web: salve a foto no campo base64\n        photo.base64 = `data:image/jpeg;base64,${readFile.data}`;\n      }\n    }\n  }\n\n  public async deletePicture(photo: Photo, position: number) {\n    // Remova esta foto da matriz de dados de referÃªncia Fotos\n    this.photos.splice(position, 1);\n\n    // Atualize o cache da matriz de fotos substituindo a matriz de fotos existente\n    Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photos)\n    });\n\n    // Excluir arquivo de foto do sistema de arquivos\n    const filename = photo.filepath\n      .substr(photo.filepath.lastIndexOf('/') + 1);\n\n    await Filesystem.deleteFile({\n      path: filename,\n      directory: FilesystemDirectory.Data\n    });\n  }\n}\n\ninterface Photo {\n  filepath: string;\n  webviewPath: string;\n  base64?: string;\n}\n"],"sourceRoot":"webpack:///","file":"gallery-gallery-module-es5.js"}